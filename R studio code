####Load packages####

library(tidyverse)
library(viridis)
library(knitr)
####Alpha Diversity for DNA####
NirK_alpha <- read.csv("SI_TS_NirK_alpha_diversiy.csv", stringsAsFactors = FALSE)

View(NirK_alpha)

colnames(NirK_alpha)

NirK_alpha.pd <- NirK_alpha %>%
  separate(placerun, into = c("sample", "depth", "gene", "extra"), sep = "_", remove = FALSE) %>%
  select(-extra) %>%  # Remove the 'extra' column
  mutate(depth = as.numeric(gsub("m", "", depth)))
  
# Display the first few rows of the dataset
head(NirK_alpha.pd)

# Select relevant columns
NirK_alpha_data_wide <- NirK_alpha.pd %>%
  select(depth, phylo_entropy, quadratic, unrooted_pd, rooted_pd, bwpd)


# Pivot data to a longer format for faceting
NirK_alpha_data_longer <- NirK_alpha_data_wide %>%
  pivot_longer(cols = c("phylo_entropy", "quadratic", "unrooted_pd", "rooted_pd", "bwpd"),
               names_to = "metric",
               values_to = "value")

# Define your desired order of metrics
NirK_ordered <- c("unrooted_pd", "rooted_pd", "phylo_entropy", "quadratic", "bwpd")

# Convert 'metric' column to a factor with specified levels
NirK_alpha_data_longer$metric <- factor(NirK_alpha_data_longer$metric, levels = NirK_ordered)

#generate plot
Alpha_NirK_ggplot <- ggplot(NirK_alpha_data_longer, aes(y = depth, x = value)) +
  geom_point(aes(colour = metric, shape = metric), size = 4) +
  scale_y_reverse() +
  labs(title = "Alpha Diversity Metric against Depth",
       x = "value") +
  theme_minimal() +
  facet_grid(. ~ metric, scales = "free_x") +
  theme(panel.spacing = unit(2, "cm"))



#Visualize plot
Alpha_NirK_ggplot

#Save plot
ggsave(filename = "NirK_plot_alpha.png"
       , Alpha_NirK_ggplot
       , height=7, width=15)


####Beta Diversity for DNA####

# Load the data from the CSV file
NirK_beta_data <- read_csv("SI_TS_NirK_beta_diversity.csv")  
# Display the first few rows of the dataset
head(NirK_beta_data)


# Split 'sample_1' and 'sample_2' into their components (optional but useful for clarity)
NirK_beta_data_split <- NirK_beta_data %>%
  mutate(
    sample_1 = gsub("_NirK_complete_profile", "", sample_1),
    sample_2 = gsub("_NirK_complete_profile", "", sample_2)
  ) %>%
  mutate(
    sample_1 = gsub("SI072_", "", sample_1),
    sample_2 = gsub("SI072_", "", sample_2)
  ) %>%
  mutate(
    sample_1 = as.numeric(gsub("m", "", sample_1)),
    sample_2 = as.numeric(gsub("m", "", sample_2))
  )

# Generate a list of all unique samples from both columns
all_samples_NirK <- sort(unique(c(NirK_beta_data_split$sample_1, NirK_beta_data_split$sample_2)))

view(all_samples_NirK)
# Create an empty matrix filled with NA
NirK_beta_matrix_complete <- matrix(NA,
                               nrow = length(all_samples_NirK),
                               ncol = length(all_samples_NirK),
                               dimnames = list(all_samples_NirK, all_samples_NirK))


# Fill in the matrix symmetrically
for (i in seq_len(nrow(NirK_beta_data_split))) {
  row_name <- as.character(NirK_beta_data_split$sample_1[i])
  col_name <- as.character(NirK_beta_data_split$sample_2[i])
  value <- NirK_beta_data_split$Z_1[i]
  
  # Assign value symmetrically
  NirK_beta_matrix_complete[row_name, col_name] <- value
  NirK_beta_matrix_complete[col_name, row_name] <- value
}

#Troubleshooting
print(row_name)
print(col_name)
print(rownames(NirK_beta_matrix_complete))
print(colnames(NirK_beta_matrix_complete))

# Replace NA with 0 if desired (or leave as NA for missing values)
NirK_beta_matrix_complete[is.na(NirK_beta_matrix_complete)] <- 0

# Convert to a data frame for compatibility with pheatmap
NirK_beta_matrix_clean <- as.data.frame(NirK_beta_matrix_complete)

# View the completed matrix
print(NirK_beta_matrix_clean)

###Plotting Beta Diversity###
# Sort rows by their names or a specific column
NirK_sorted_matrix <- NirK_beta_matrix_clean[order(rownames(NirK_beta_matrix_clean)), , drop = FALSE]

# View the completed matrix
print(NirK_sorted_matrix)

#export matrix for downstream analysis as .csv file
write.csv(NirK_sorted_matrix, "NirK_KR_distance_matrix.csv", row.names = TRUE)



####Taxonomy analysis for DNA####
# List of classification files
file_list <- c("SI072_100m_classifications.tsv",
               "SI072_120m_classifications.tsv",
               "SI072_150m_classifications.tsv",
               "SI072_200m_classifications.tsv",
               "SI072_10m_classifications.tsv",
               "SI072_135m_classifications.tsv",
               "SI072_165m_classifications.tsv")

# Merge all data frames by row names (assuming all files have a common columns)
NirK_class_data <- file_list %>%
  lapply(read_tsv, col_types = cols(.default = "c")) %>%
  bind_rows()


# Split the Sample column
NirK_class_data <- NirK_class_data %>%
  separate(Sample, into = c("Sample", "Depth", "extra"), sep = "_", remove = FALSE) %>%
  select(-extra) %>%  # Remove the 'extra' column
  mutate(Depth = as.numeric(gsub("m", "", Depth))) %>% # Remove 'm' and convert to numeric
  separate(Taxonomy, into = c("Root", "Domain", "Phylum", "Class", "Order", "Family", "Genus", "Species"), sep = ";", fill = "right") %>%
  select(-Root)  # Remove the 'Root' column
NirK_sub_data <- NirK_class_data %>%
  filter(Marker == "NirK")
NirK_sub_data %>% filter(is.na(as.numeric(Abundance)))

view(NirK_sub_data)
# Display the first few rows of the dataset
head(NirK_sub_data)

summary(NirK_sub_data) 

####Bubbleplot for NirK for DNA####
# Sum Abundance by Sample, Phylum, and Depth
NirK_data_taxa <- NirK_sub_data %>%
  mutate(Abundance = as.numeric(Abundance)) %>%  
  group_by(Sample, Class, Depth) %>%
  summarise(Abundance = sum(Abundance, na.rm = TRUE), .groups = "drop") %>%
  mutate(Class = gsub("c__", "", Class))

head(NirK_data_taxa)

#plot
NirK_bubbleplot_taxonomy <- ggplot(NirK_data_taxa, aes(x = Class, y = Depth, size = Abundance)) +
  geom_point(shape = 21, fill = viridis(10, option = "viridis")[8], color = "black", alpha = 0.7) +
  scale_y_reverse(limits = c(210, 0)) +
  scale_size(range = c(1, 10)) +
  theme_minimal() +
  labs(title = "Metagenome",
       x = "Class",
       y = "Depth (m)",
       size = "Abundance") +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))

#Visualize plot
NirK_bubbleplot_taxonomy

#Save plot
ggsave(filename = "NirK_bubbleplot_taxonomy.png"
       , NirK_bubbleplot_taxonomy)




####Taxonomy analysis w/ metatranscriptome####
# List of classification files
metatranscriptome_file_list <- c("Metatranscriptome_100m_classifications.tsv",
               "Metatranscriptome_120m_classifications.tsv",
               "Metatranscriptome_150m_classifications.tsv",
               "Metatranscriptome_200m_classifications.tsv",
               "Metatranscriptome_10m_classifications.tsv",
               "Metatranscriptome_135m_classifications.tsv",
               "Metatranscriptome_165m_classifications.tsv")

# Merge all data frames by row names (assuming all files have a common columns)
NirK_class_data_metatranscriptome <- metatranscriptome_file_list %>%
  lapply(read_tsv, col_types = cols(.default = "c")) %>%
  bind_rows()

# Split the Sample column
NirK_class_data_metatranscriptome <- NirK_class_data_metatranscriptome %>%
  separate(Sample, into = c("Sample", "Depth", "extra"), sep = "_", remove = FALSE) %>%
  select(-extra) %>%  # Remove the 'extra' column
  mutate(Depth = as.numeric(gsub("m", "", Depth))) %>% # Remove 'm' and convert to numeric
  separate(Taxonomy, into = c("Root", "Domain", "Phylum", "Class", "Order", "Family", "Genus", "Species"), sep = ";", fill = "right") %>%
  select(-Root)  # Remove the 'Root' column
NirK_sub_data_metatranscriptome <- NirK_class_data_metatranscriptome %>%
  filter(Marker == "NirK")
NirK_sub_data_metatranscriptome %>% filter(is.na(as.numeric(Abundance)))

view(NirK_sub_data_metatranscriptome)
# Display the first few rows of the dataset
head(NirK_sub_data_metatranscriptome)

write.csv(NirK_sub_data_metatranscriptome, "NirK_sub_data_metatranscriptome.csv", row.names = TRUE)


####Bubbleplot for NirK for metatranscriptome####
# Sum Abundance by Sample, Phylum, and Depth
NirK_data_taxa_metatranscriptome <- NirK_sub_data_metatranscriptome %>%
  mutate(Abundance = as.numeric(Abundance)) %>%  
  group_by(Sample, Class, Depth) %>%
  summarise(Abundance = sum(Abundance, na.rm = TRUE), .groups = "drop") %>%
  mutate(Class = gsub("c__", "", Class))

write.csv(NirK_data_taxa_metatranscriptome, "NirK_data_taxa_metatranscriptome.csv", row.names = TRUE)


#generate plot
NirK_bubbleplot_taxonomy_metatranscriptome <- ggplot(NirK_data_taxa_metatranscriptome, aes(x = Class, y = Depth, size = Abundance)) +
  geom_point(shape = 21, fill = viridis(1, option = "viridis"), color = "black", alpha = 0.7) +
  scale_y_reverse(limits = c(210, 0)) +
  scale_size(range = c(1, 10)) +
  theme_minimal() +
  labs(title = "Metatranscriptome",
       x = "Class",
       y = "Depth (m)",
       size = "Abundance") +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))


#Visualize plot
NirK_bubbleplot_taxonomy_metatranscriptome

#Save plot
ggsave(filename = "NirK_bubbleplot_taxonomy_metatranscriptome.png"
       , NirK_bubbleplot_taxonomy_metatranscriptome)


####Combining metagenome and metatranscriptome abundance plots####
install.packages("patchwork")  # if not already installed
library(patchwork)

combined_plot <- NirK_bubbleplot_taxonomy + NirK_bubbleplot_taxonomy_metatranscriptome +
  plot_layout(ncol = 2, guides = "collect") & theme(legend.position = "right")

print(combined_plot)

# Save plot
ggsave("NirK_metagenome_vs_metatranscriptome_bubbleplot.png", combined_plot, width = 16, height = 8, dpi = 300)


####Top 10 genera in metagenome####
NirK_metagenome_taxa <- NirK_sub_data %>%
  mutate(Abundance = as.numeric(Abundance)) %>%
  group_by(Sample, Genus, Depth) %>%
  summarise(Abundance = sum(Abundance, na.rm = TRUE), .groups = "drop")

#get top 10 genera
top10_genera_dna <- NirK_metagenome_taxa %>%
  group_by(Genus) %>%
  summarise(mean_abundance = mean(Abundance, na.rm = TRUE)) %>%
  arrange(desc(mean_abundance)) %>%
  slice_head(n = 10) %>%
  pull(Genus)

view(top10_genera_dna)

metaDNA_top10 <- NirK_metagenome_taxa %>%
  filter(Genus %in% top10_genera_dna)
#table
top10_table_dna <- NirK_metagenome_taxa %>%
  filter(Genus %in% top10_genera_dna) %>%
  group_by(Genus) %>%
  summarise(
    Mean_Abundance = mean(Abundance, na.rm = TRUE),
    SD_Abundance = sd(Abundance, na.rm = TRUE),
    .groups = "drop"
  ) %>%
  arrange(desc(Mean_Abundance))

# Display as a nice table
kable(top10_table_dna, digits = 2, caption = "Top 10 Genera in Metagenome (NirK) and Their Abundance")

write.csv(top10_table_dna, "top10_table_dna.csv", row.names = TRUE)


#generate plot
top10taxa_dna <- ggplot(metaDNA_top10, aes(x = Genus, y = Depth, size = Abundance)) +
  geom_point(shape = 21, fill = viridis(10, option = "viridis")[8], color = "black", alpha = 0.7) +
  scale_size(range = c(1, 10)) +
  scale_y_reverse(limits = c(210, 0)) +
  labs(  y = "Depth (m)",
       x = "Genus",
       size = "Abundance") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))

top10taxa_dna

####Top 10 genera in metatranscriptome####

NirK_taxa_metatranscriptome <- NirK_sub_data_metatranscriptome %>%
  mutate(Abundance = as.numeric(Abundance)) %>%
  group_by(Sample, Genus, Depth) %>%
  summarise(Abundance = sum(Abundance, na.rm = TRUE), .groups = "drop")

top10_genera_rna <- NirK_taxa_metatranscriptome %>%
  group_by(Genus) %>%
  summarise(mean_abundance = mean(Abundance, na.rm = TRUE)) %>%
  arrange(desc(mean_abundance)) %>%
  slice_head(n = 10) %>%
  pull(Genus)

metaRNA_top10 <- NirK_taxa_metatranscriptome %>%
  filter(Genus %in% top10_genera_rna)

top10_genera_rna
# Generate table of mean and SD of abundance for the top 10 RNA genera
top10_table_rna <- metaRNA_top10 %>%
  group_by(Genus) %>%
  summarise(
    Mean_Abundance = mean(Abundance, na.rm = TRUE),
    SD_Abundance = sd(Abundance, na.rm = TRUE),
    .groups = "drop"
  ) %>%
  arrange(desc(Mean_Abundance))

# Display nicely
kable(top10_table_rna, digits = 2, caption = "Top 10 Genera in Metatranscriptome (NirK) and Their Abundance")
write.csv(top10_table_rna, "top10_table_rna.csv", row.names = TRUE)


#generate plot
top10taxa_rna <- ggplot(metaRNA_top10, aes(x = Genus, y = Depth, size = Abundance)) +
  geom_point(shape = 21, fill = viridis(1, option = "viridis"), color = "black", alpha = 0.7) +
  scale_size(range = c(1, 10)) +
  scale_y_reverse(limits = c(210, 0)) +
  labs( y = "Depth (m)",
       x = "Genus",
       size = "Abundance") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))
top10taxa_rna

#combine genera plots
combined_plot_genera <-  top10taxa_dna + top10taxa_rna +
  plot_layout(ncol = 2, guides = "collect") & theme(legend.position = "right")

print(combined_plot_genera)

# Save to plot
ggsave("NirK_metagenome_vs_metatranscriptome_bubbleplot_genera.png", combined_plot_genera, width = 16, height = 8, dpi = 300)

# Combine the 4 plots into a 2x2 panel
combined_plot_4 <- (NirK_bubbleplot_taxonomy | NirK_bubbleplot_taxonomy_metatranscriptome) /
  (top10taxa_dna | top10taxa_rna) +
  plot_layout(heights = c(1, 1.3)) 

# Display the plot
combined_plot_4

ggsave("NirK_combined_plot_4.png", combined_plot_4, width = 14, height = 10, dpi = 300)
